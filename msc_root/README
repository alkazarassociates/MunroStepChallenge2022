See https://realpython.com/django-nginx-gunicorn/#:~:text=Gunicorn%20implements%20the%20Web%20Server,to%20thousands%20of%20simultaneous%20connections.

Instance is hosted on AWS Lightsail https://lightsail.aws.amazon.com/ls/webapp/us-east-1/instances/StepChallenge-1/connect
Mike@Elkins.com, password on LastPass

Server can be logged in at bitnami@44.194.8.93.  I've put Balthasar's pub key in place.

nginx is the reverse proxy/web server.  It starts up automatically on boot.
Both the main server and test server are run by gunicorn.

After log in:
screen  or   screen -r
. set_secrets
. go_test_server
./start.sh

Another tab  (CTrl-a c in screen)
. set_secrets
. go_production
. prod_environment
./start.sh


go_production:
#/user/bin/bash

cd /opt/bitnami/projects/TSC22/msc_root

go_test_server:
#/user/bin/bash

cd /opt/bitnami/projects/TSC22_Test/msc_root

set_secrets:
export DJANGO_SECRET_KEY=See Lastpass
export AWS_EMAIL_USER=See Lastpass
export AWS_EMAIL_PASSWORD=See Lastpass
export POSTGRES_PASSWORD=See Lastpass

The database is running NOT THE BITNAMI one, but /usr/lib/postgresql/11/bin!  Use that psql.
To start it from scratch:
/usr/lib/postgresql/11/bin/psql -U postgres
CREATE USER django WITH PASSWORD <See Lastpass>;
ALTER USER django CREATEDB;
CREATE DATABASE django_test WITH OWNER = django;

LOGS--------------------------------------
nginx access log: /var/log/nginx/access.log
nginx error log:  /var/log/nginx/error.log

gunicorn access logs: /var/log/gunicorn/access.log and test-access.log
         error logs:  /var/log/gunicorn/error.log and test-error.log



---------------------------
Setting up new test server
Lightsail instance 'TSCTest'
'ssh-keygen' (default choices)
copy laptop's public key to .ssh/authorized_keys
Gave it a static IP address (named TestServerIP4)
Add an entry in .ssh/config

Changing the pull of prod db into test to a push of prod to test, so that test has no built in access to prod.

----------------------------------
I18N:

run 'python manage.py makemessages -l es' to make (for example) the spanish message file.
Repeat for all languages.
Update locale/xx/LC_MESSAGES/django.po files with translations.
run 'python manage.py compilemessages'.
Check in .po and .mo files
